import 'dart:convert';
import 'package:shelf/shelf.dart';
import 'package:shelf/shelf_io.dart' as shelf_io;
import 'package:postgres/postgres.dart';

void main() async {
  final db = PostgreSQLConnection(
    'mysql.awardspace.com',
    5432,
    '4572146_smartgrocerydb',
    username: '4572146_smartgrocerydb',
    password: 'Csci410j',
  );

  await db.open();

  final handler = Pipeline().addMiddleware(logRequests()).addHandler((Request request) async {
    if (request.url.path == 'pantry' && request.method == 'GET') {
      final results = await db.query('SELECT * FROM Pantry');
      final pantryItems = results.map((row) => {
            'id': row[0],
            'name': row[1],
            'quantity': row[2],
            'unit': row[3],
            'expiration_date': row[4],
          }).toList();
      return Response.ok(jsonEncode(pantryItems), headers: {'Content-Type': 'application/json'});
    }

    if (request.url.path == 'pantry' && request.method == 'POST') {
      final body = await request.readAsString();
      final data = jsonDecode(body);
      await db.query(
        'INSERT INTO Pantry (name, quantity, unit, expiration_date) VALUES (@name, @quantity, @unit, @expiration_date)',
        substitutionValues: {
          'name': data['name'],
          'quantity': data['quantity'],
          'unit': data['unit'],
          'expiration_date': data['expiration_date'],
        },
      );
      return Response.ok(jsonEncode({'message': 'Pantry item added successfully'}),
          headers: {'Content-Type': 'application/json'});
    }

    return Response.notFound('Route not found');
  });

  const port = 8080;
  final server = await shelf_io.serve(handler, 'localhost', port);
  print('Server running on localhost:$port');
}
